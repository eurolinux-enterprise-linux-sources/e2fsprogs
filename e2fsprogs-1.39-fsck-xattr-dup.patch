List:       linux-ext4
Subject:    [PATCH] e2fsck: don't check/clone duplicate xattr blocks in fs without
From:       Eric Sandeen <sandeen () redhat ! com>
Date:       2011-02-09 18:41:43
Message-ID: 4D52DFE7.4050301 () redhat ! com

I had an extremely corrupted customer filesystem which, after thousands
of lines of e2fsck output, found one more problem on an immediately
subsequent e2fsck.  In short, a file had had its i_file_acl block
cloned due to being a duplicate.  That ultimately got cleared
because the fs did not have the xattr feature, and the inode
was subsequently removed due to invalid mode.

The 2nd e2fsck pass found the cloned xattr block as in use, but
not owned by any file, and had to fix up the block bitmaps.

Simply skipping the processing of duplicate xattr blocks on a
non-xattr filesystem seems reasonable, since they will be cleared
later in any case.

(also fix existing brace misalignment)

Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

Index: e2fsprogs-1.41.12/e2fsck/pass1b.c
===================================================================
--- e2fsprogs-1.41.12.orig/e2fsck/pass1b.c
+++ e2fsprogs-1.41.12/e2fsck/pass1b.c
@@ -310,7 +310,10 @@ static void pass1b(e2fsck_t ctx, char *b
 			pctx.errcode = ext2fs_block_iterate2(fs, ino,
 					     BLOCK_FLAG_READ_ONLY, block_buf,
 					     process_pass1b_block, &pb);
-		if (inode.i_file_acl)
+		/* If no xattr feature, attrs will be cleared later anyway */
+		if ((fs->super->s_feature_compat &
+			EXT2_FEATURE_COMPAT_EXT_ATTR) &&
+		     inode.i_file_acl)
 			process_pass1b_block(fs, &inode.i_file_acl,
 					     BLOCK_COUNT_EXTATTR, 0, 0, &pb);
 		if (pb.dup_blocks) {
